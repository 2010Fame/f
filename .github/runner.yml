name: run

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:
  # schedule: #TODO:
  #   - cron: "* */2 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB || github.token }}
  token: ${{ secrets.TOKEN_GITHUB || github.token }}
  GH_TOKEN: ${{ github.token }}
  GITHUB_REPO: ${{github.repo}}
  envfile: ${{secrets.ENV}}
  WORKER_ORG: ${{ github.repository_owner}}

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: write
  actions: write
  checks: write
  deployments: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  runner-linux:
    runs-on: ubuntu-latest
    # needs: [build]
    # timeout-minutes: 30
    steps:
      - name: Free Space Before
        run: |
          echo "Free space:"
          df -h

      - name: Remove unnecessary
        run: |
          sudo rm -rf /usr/share/dotnet &
          sudo rm -rf /usr/local/lib/android &
          sudo rm -rf /opt/ghc &
          sudo rm -rf /opt/hostedtoolcache/CodeQL &
          sudo docker image prune --all --force &

      - name: Free Space
        run: |
          echo "Free space:"
          df -h

      - name: Set up Git credentials
        run: |
          git config --global user.name Nasfame
          git config --global user.email "laciferin@gmail.com"
          git config --global credential.helper '!f() { echo "username=Nasfame\npassword=$token"; }; f'
          git config --global push.autoSetupRemote true
          git config --global push.default matching
          git config --global alias.tags 'tag -n99'

      - uses: actions/checkout@v4
        with:
          token: ${{env.GITHUB_TOKEN}}
          recursive: true
          persist-credentials: true

      - uses: extractions/setup-just@v1
  
      # - name: Write environment
      #   working-directory: ./worker
      #   run: |
      #     echo ${{env.envfile}} > .env
      #     sed -i 's/ /\n/g' .env
      #     source .env

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.6

      - uses: actions/setup-node@v3
        with:
          node-version: "20.x.x"
          check-latest: true

      - name: Set Worker Name
        working-directory: ./worker
        run: |
          touch .env
          workerName="${{github.repository}}-${{runner.os}}-${{ github.workflow }}-${{ github.ref }}"  
          workerName=$(echo $workerName | sed 's/\//-/g')

          # export WORKER_NAME="$workerName"

          # echo 'WORKER_NAME=$workerName' >> $GITHUB_ENV
          # echo 'WORKER_NAME=$workerName' | tee $GITHUB_ENV
          echo 'WORKER_NAME=$workerName' | tee .env


          echo WorkerName=$workerName

      - name: Run Worker
        working-directory: ./worker
        run: |
          just setup
          just

      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.11"
      #     cache: "pip"
