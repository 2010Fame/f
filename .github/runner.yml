name: build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:
  schedule:
    - cron: "*/20 * * * *"

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

env:
  token: ${{ secrets.TOKEN_GITHUB }}
  GH_TOKEN: ${{ github.token }}
  GITHUB_REPO: ${{github.repo}}

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: write
  actions: write
  checks: write
  deployments: write
  repository-projects: write
  security-events: write
  statuses: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "linux"
  linux:
    # if: false #use to disable the job

    runs-on: ubuntu-latest
    # timeout-minutes: 30

    steps:
      - name: Free Space Before
        run: |
          echo "Free space:"
          df -h

      # - name: Maximize build space
      #   uses: easimon/maximize-build-space@master
      #   with:
      #     # need space in /var for Docker images
      #     root-reserve-mb: 30000
      #     # swap-size-mb: 1024
      #     remove-dotnet: 'true'
      #     remove-android: true
      #     remove-haskell: true
      #     remove-codeql: true
      #     remove-docker-images: true
      #     overprovision-lvm: true
      - name: Remove unnecessary
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force &

      - name: Free Space
        run: |
          echo "Free space:"
          df -h

      - uses: actions/checkout@v3
        with:
          persist-credentials: true #implicit access to the token to every step

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version: 1.22

      - name: Log in to the Container registry
        if: false #${{ github.event.inputs.runs-on }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.6

      - uses: actions/setup-node@v3
        with:
          node-version: "21.5.0"
          check-latest: false

      - name: Set up Git credentials
        run: |
          git config --global user.name Nasfame
          git config --global user.email "laciferin@gmail.com"
          git config --global credential.helper '!f() { echo "username=Nasfame\npassword=$token"; }; f'
          git config --global push.autoSetupRemote true
          git config --global push.default matching
          git config --global alias.tags 'tag -n99'

          
      # "touch continue" to continue the workflow without exiting the session
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        timeout-minutes: 10000
        with:
          wait-timeout-minutes: 60
          # ssh-known-hosts: ${{ steps.read_pub_key.outputs.pub_key }}
          limit-access-to-actor: true
          limit-access-to-users: Nasfame,pythoneerHiro
